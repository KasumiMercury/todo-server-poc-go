// Code generated by MockGen. DO NOT EDIT.
// Source: jwks.go
//
// Generated by this command:
//
//	mockgen -source=jwks.go -destination=mocks/jwks_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	auth "github.com/KasumiMercury/todo-server-poc-go/internal/domain/auth"
	gomock "go.uber.org/mock/gomock"
)

// MockJWKSValidator is a mock of JWKSValidator interface.
type MockJWKSValidator struct {
	ctrl     *gomock.Controller
	recorder *MockJWKSValidatorMockRecorder
	isgomock struct{}
}

// MockJWKSValidatorMockRecorder is the mock recorder for MockJWKSValidator.
type MockJWKSValidatorMockRecorder struct {
	mock *MockJWKSValidator
}

// NewMockJWKSValidator creates a new mock instance.
func NewMockJWKSValidator(ctrl *gomock.Controller) *MockJWKSValidator {
	mock := &MockJWKSValidator{ctrl: ctrl}
	mock.recorder = &MockJWKSValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJWKSValidator) EXPECT() *MockJWKSValidatorMockRecorder {
	return m.recorder
}

// Refresh mocks base method.
func (m *MockJWKSValidator) Refresh(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Refresh", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Refresh indicates an expected call of Refresh.
func (mr *MockJWKSValidatorMockRecorder) Refresh(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Refresh", reflect.TypeOf((*MockJWKSValidator)(nil).Refresh), ctx)
}

// ValidateToken mocks base method.
func (m *MockJWKSValidator) ValidateToken(tokenString string) *auth.TokenValidationResult {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", tokenString)
	ret0, _ := ret[0].(*auth.TokenValidationResult)
	return ret0
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJWKSValidatorMockRecorder) ValidateToken(tokenString any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJWKSValidator)(nil).ValidateToken), tokenString)
}
